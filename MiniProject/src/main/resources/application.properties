spring.application.name=MiniProject
server.port=8080

# Spring data Config
spring.datasource.url=jdbc:mysql://localhost:3306/MiniProject?createDatabaseIfNotExist=true

#jdbc:mysql://
#
#Indicates the use of the JDBC (Java Database Connectivity) API and specifies MySQL as the database type.
#This is the protocol required for connecting to a MySQL database using the JDBC driver.
#localhost
#
#Specifies the host where the MySQL database server is running.
#localhost refers to the database server running on the same machine as the application. If the database is hosted on another machine or server, you would replace localhost with the server's IP address or hostname.
#:3306
#
#Specifies the port on which the MySQL server is listening for incoming connections.
#3306 is the default port for MySQL. If MySQL is configured to use a different port, you need to specify that port here.


spring.datasource.username=sam
spring.datasource.password=Sam333&333

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#//Hibernate is an Object-Relational Mapping (ORM) framework used by Spring Boot to map Java objects to database tables.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true

spring.jpa.show-sql=true
#This is useful for development and debugging, as it allows you to see what SQL is being sent to the database.
spring.jpa.properties.hibernate.format_sql=true

#JDBC (Java Database Connectivity) is an API in Java that enables Java applications to interact with relational databases.
#A JDBC driver is a software library that implements the JDBC API, acting as a bridge between the application and the database.
#The JDBC driver translates Java code into database-specific calls for CRUD (Create, Read, Update, Delete) operations.
